.container {
  box-shadow: inset 0 0 0 1px var(--color-grey-lighter);
  background: var(--color-white);
  transition: all 300ms ease;
  display: inline-block;
  position: relative;
  border-radius: 4px;
  margin: 1.5em 0 0;
  min-width: 12em;
  width: 100%;
}

.label {
  color: var(--color-grey-light);
  transition: all 250ms var(--easeoutback);
  transform-origin: left bottom;
  pointer-events: none;
  position: absolute;
  padding: 0.75em;
  display: block;
  left: 0;
  top: -0.25em;
}

.input {
  composes: legacy_textarea textarea from '../../globals/reset.css';
  width: 100%;
  display: block;
  padding: 0.5em;
  border: none;
}

.input:focus {
  outline: 0;
  border-color: var(--color-blue);
}
.message {
  position: absolute;
  left: 0;
  width: 100%;
  padding: 0em 0.5em;
  min-height: 0;
  transition: all 200ms ease;
  background: var(--color-error);
  color: white;
  /* Stops the element being bigger than the input */
  box-sizing: border-box;
}
.messageError {
  min-height: 1.5em;
  border-radius: 0 0 4px 4px;
}

.containerActive {}

.containerFocus {
  box-shadow: inset 0 0 0 1px var(--color-blue), 0 0 2px color(var(--color-blue) l(70%));
}

.containerError {
  box-shadow: inset 0 0 0 1px var(--color-error);
  border-radius: 4px 4px 0 0;
  margin-bottom: 1em;
}
.containerActive .label {
  transform: scale(0.8) translate(-0.75em, -2.7em);
  color: var(--color-grey-light);
  border-radius: 0 0 4px 4px;
}
.containerFocus .label {
  color: var(--color-blue);
}

.containerError .label,
.containerError .input {
  color: var(--color-error);
}
